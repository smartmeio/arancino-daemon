[general]

#polling cycle time (in seconds) to discover new ports.
cycle_time = 10


#------------------------------------------------------------------------------------------
[redis]

# redis server host
host = localhost

# redis server port of volatile instance
port_volatile = 6379

# redis server port of persistent instance
port_persistent = 6380

# decode response in redis connection
decode_response = True

# policy for data storage: accepted values are: VOLATILE, PERSISTENT, VOLATILE_PERSISTENT
# VOLATILE:
instance_type = VOLATILE

# redis connection attempts: -1 -> no limits, default 5 (every 3 seconds)
connection_attempts = 5

#------------------------------------------------------------------------------------------
[redis.volatile]

datastore_std_db = 0
datastore_dev_db = 1
datastore_per_db = 2


#------------------------------------------------------------------------------------------
[redis.persistent]

datastore_std_db = 0
datastore_dev_db = 1
datastore_per_db = 2


#------------------------------------------------------------------------------------------
[redis.volatile_persistent]

#volatile
datastore_std_db = 0

#persistent
datastore_dev_db = 0
datastore_per_db = 1


#------------------------------------------------------------------------------------------
[port]
# folder for firmware to be flashed onto microcontroller.
firmware_path = /tmp/arancino/firmware

# allowed file extensions for firmware
firmware_file_types = ["bin", "hex"]

# reset port on connection
reset_on_connect = True

#------------------------------------------------------------------------------------------
[port.serial]
# default 'arancino port' configuration status

# automatically enable (and connect) a new discovered port
enabled = True

# set to true to make it not visible in the main device view in the UI
hide = False

# default baudarate
comm_baudrate = 4000000

# baudrate used for 'touch' reset
reset_baudrate = 300

# Filter works with the below list of VID:PID. Accepted filter type are: EXCLUDE, ONLY, ALL
# EXCLUDE: excledus the ones in the list.
# ONLY: acceptes only the ones in the list.
# ALL: no filter, accepts all. This is the default filter type.
filter_type=ALL

# List of VID:PID used to make a filter
filter_list = ["0x04d8:0xecd9", "0x04d8:0xecd9","0x04d8:0xecd9"]

# Timeout in seconds in serial connection Min: 1
timeout = 1

# command to be spawn when upload api is called. The command could have one or more placeholders.
#   available placeholder are: (each attributes of a Port class can used as placeholder)
#
# BASE PORT
#   - port._id
#   - port._device
#   - port._port_type
#   - port._library_version
#   - port._m_b_creation_date
#   - port._m_b_last_usage_date
#   - port._m_s_plugged
#   - port._m_s_connected
#   - port._m_c_enabled
#   - port._m_c_alias
#   - port._m_c_hide
#   - firmware
#
# SERIAL PORT
#   - port.__comm_baudrate
#   - port.__reset_baudrate
#   - port.__timeout
#   - port.__m_p_vid
#   - port.__m_p_pid
#   - port.__m_p_name
#   - port.__m_p_description
#   - port.__m_p_hwid
#   - port.__m_p_serial_number
#   - port.__m_p_location
#   - port.__m_p_manufacturer
#   - port.__m_p_product
#   - port.__m_p_interface
#
# OTHERS
#   - firmware

upload_command = /usr/bin/run-arancino-bossac {port._device} {firmware}

# reset port on connection, override the default configuration
reset_on_connect = True

#------------------------------------------------------------------------------------------
[port.test]
# automatically enable (and connect) a new discovered port
enabled = True

# set to true to make it not visible in the main device view in the UI
hide = True

# Filter works with the below list of VID:PID. Accepted filter type are: EXCLUDE, ONLY, ALL
# EXCLUDE: excledus the ones in the list.
# ONLY: acceptes only the ones in the list.
# ALL: no filter, accepts all. This is the default filter type.
filter_type=ALL

# List of VID:PID used to make a filter
filter_list = []

# the number of port to create for test purpose
num = 0

# delay between each command in seconds (accept float). Default 500ms

delay = 5

# prefix of the id generated for the test port
id_template = TESTPORT

# command to be spawn when upload api is called. The command could have one or more placeholders.
upload_command =

# reset port on connection, this override the default configuration
reset_on_connect = False

#------------------------------------------------------------------------------------------
[log]
# Accetpted values are: ERROR, WARNING, INFO, DEBUG
level = DEBUG
name = Arancino

# handlers
handler_console = True
handler_file = True

# Size in MBytes only for file handler. Min: 1, Max: 5, Default: 1
size = 1

# Number of files to use in rotate mode. Min: 1, Max: 10, Default: 1
rotate = 1

# file handler filenames
#file_base = arancino.base.log
file_log = arancino.log
file_error = arancino.error.log
#file_stats = arancino.stats.log

# print stack trace on errors
print_stack_trace = True
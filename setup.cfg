[aliases]
clean_egg_info = egg_info -Db ''
release = clean_egg_info sdist
source = register sdist binary
binary = bdist_egg upload --show-response

[upload]
repository = https://packages.smartme.io/python

[sdist]
formats = gztar

[metadata]
name = arancino
version = 2.4.0
description = Arancino Daemon for Arancino Library
author = Sergio Tomasello
author_email = sergio@smartme.io
long_description =
    Receives commands from Arancino Library (uC) trough the Arancino Cortex Protocol
    over serial connection. It is designed to run under Arancino OS and can manage
    multiple serial connections.
long_description_content_type = text/markdown; charset=UTF-8
platforms = Unix
license = Apache License, Version 2.0
license_file = LICENSE
url = http://www.arancino.cc
keywords = CPAN PyPI distutils eggs package management
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: System :: Archiving :: Packaging
    Topic :: System :: Systems Administration
    Topic :: Utilities

[options]
zip_safe = False
include_package_data = True
packages = find:
install_requires =
    pyserial==3.5
    redis>=2.10.6
    redistimeseries>=1.4.3
    setuptools>=41.4.0
    semantic-version>=2.8.4
    uptime>=3.0.1
    Flask==2.0.3
    Flask_HTTPAuth==4.5.0
    requests>=2.23.0
    netifaces>=0.10.9
    gunicorn>=20.0.4
    Jinja2==3.0.3
    paho-mqtt>=1.5.1
    pyyaml>=6.0
python_requires = >= 3.5

[options.packages.find]
exclude =
    test

[options.data_files]
extras =
    extras/pre-install.sh
    extras/post-install.sh
    extras/arancino.service
    extras/vars.env
config =
    config/arancino.cfg.yml
    config/gunicorn.cfg.py
templates =
    templates/default.json.tmpl
    templates/default.xml.tmpl
    templates/default.yaml.tmpl
    templates/S4T_default.json.tmpl

[options.entry_points]
console_scripts =
    arancino = arancino.ArancinoStart:run
